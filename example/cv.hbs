<!DOCTYPE html>
<!-- A simple HTML CV that uses D3.js-based visualization via the d3-cv-multitimeline library -->
<html lang="en">

<head>
    <meta charset="utf-8">
    <title></title>
    <script src="./bundle.js"></script>
    <link rel="stylesheet" type="text/css" href="./cv.css" />
</head>

{{#*inline "item"}}
<li id="{{id}}">
    <dt>Period</dt>
    <dd class="fromdate">{{from}}</dd>
    <dd class="todate">{{to}}</dd>
    <dt>Label</dt>
    <dd class="label">{{label}}</dd>
    <dt>Name</dt>
    <dd class="name">{{name}} (
        <a href="{{url}}">url</a>)</dd>
    <dt>Description</dt>
    <dd class="description">{{{description}}}</dd>
    <dt>Used skills</dt>
    <dd>
        <ul class="skills">
            {{#each skills}}
            <li {{#if from}}data-from="{{from}}" {{/if}} {{#if to}}data-to="{{to}}" {{/if}} {{#if strength}}data-strength="{{strength}}"
                {{/if}} {{#if description}}data-description="{{description}}" {{/if}}>{{name}}</li>
            {{/each}}
        </ul>
    </dd>
</li>
{{/inline}}

<body>
    <div id="svg-holder">
    </div>
    <div id="bio" contenteditable="true" spellcheck="true">
        <h1>Work experience</h1>
        <ul id="work">
            {{#each work}} {{> item}} {{/each}}
        </ul>
        <h1>Education</h1>
        <ul id="education">
            {{#each education}} {{> item}} {{/each}}
        </ul>
        <h1>Projects</h1>
        <ul id="projects">
            {{#each projects}} {{> item}} {{/each}}
        </ul>
    </div>

    <script type="text/javascript">
        "use strict";

        var directory = new Map();
        var skills = [];
        var skillNames = new Map();

        var itemCallback = function (item) {
            if (directory.has(item.id)) {
                console.error("Duplicate item id " + item.id);
            } else {
                directory.set(item.id, item);
            }

            item.skills.forEach(function (skill) {
                skills.push(skill);
                skillNames.set(skill.name, true);
            });
        }

        console.log(cv);

        var places = cv.data.getItemsData(document, "#work>li, #education>li, #projects>li", itemCallback);
        //var projects = cv.data.getItemsData(document, "", itemCallback);
        skills.sort(function (a, b) { return (b.to - b.from) - (a.to - a.from); });

        console.log(places);
        //console.log(projects);
        console.log(skillNames.keys());
        console.log(skills);


        var holder = document.getElementById("svg-holder");
        var chart = new cv.MutiTimeline(holder, places, skills, Array.from(skillNames.keys()));
        console.log(chart);

        chart.draw();

        window.addEventListener("resize", chart.redrawDelayed.bind(chart));
    </script>
</body>

</html>
